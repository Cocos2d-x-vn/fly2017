{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "typeTag",
    "_liveTime",
    "_liveTimeLimit",
    "_speedX",
    "_speedY",
    "_x",
    "_y",
    "_moveRect",
    "onLoad",
    "updatePosition",
    "doOnLoad",
    "update",
    "dt",
    "isValid",
    "node",
    "enabled",
    "checkLiveLimit",
    "doDestory",
    "Math",
    "min",
    "max",
    "x",
    "xMax",
    "y",
    "yMax",
    "log",
    "doUpdate",
    "destroy",
    "setLiveLimit",
    "time",
    "setSpeed",
    "xSpeed",
    "ySpeed",
    "undefined",
    "setPosition",
    "setMoveRect",
    "w",
    "h",
    "rect",
    "warn"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 标签，用于类型判断\n        typeTag: 'FlyingObject',\n\n        // 当前存活时间(秒)\n        _liveTime: 0,\n        // 存活时间限制（秒），到达该值时自动销毁，为0表示永久存在\n        _liveTimeLimit: 0,\n        // 速度\n        _speedX: 0,\n        _speedY: 0,\n        // 位置\n        _x: 0,\n        _y: 0,\n        // 限制移动范围\n        _moveRect: null\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.updatePosition();\n        // logic onLoad\n        this.doOnLoad();\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if ( !cc.isValid(this.node) ) {\n            this.enabled = false;\n            return;\n        }\n\n        // 存活检测\n        this._liveTime += dt;\n        \n        if(!this.checkLiveLimit()){\n            this.doDestory();    \n            return;\n        }\n\n        // move\n        if(this._speedX != 0 || this._speedY != 0)\n        {\n            if(!this._moveRect){\n                this._x += this._speedX;\n                this._y += this._speedY;\n            }else{\n                this._x = Math.min(Math.max(this._moveRect.x, this._x + this._speedX), this._moveRect.xMax);\n                this._y = Math.min(Math.max(this._moveRect.y, this._y + this._speedY), this._moveRect.yMax);\n                cc.log('Plane (%s, %s)', this._x, this._y);\n            }\n\n            this.updatePosition();\n        }\n        \n        // logic update\n        this.doUpdate(dt);\n    },\n\n    doOnLoad: function(){\n        // 一般由子类实现具体逻辑\n    },\n\n    // 执行每帧update操作，一般子类覆盖此方法\n    doUpdate: function(dt){\n        // 一般由子类实现具体逻辑\n        // cc.log('FlyaingObject.doUpdate(%s)', dt);\n    },\n\n    // 销毁\n    doDestory: function(){\n        if ( cc.isValid(this.node) ) {\n            this.node.destroy();\n        }\n    },\n\n    // 设置存活限制时间（秒），0为无限\n    setLiveLimit: function(time){\n        this._liveTimeLimit = time;\n    },\n\n    // 设置速度\n    setSpeed: function(xSpeed, ySpeed){\n        if(xSpeed != undefined) this._speedX = xSpeed;\n        if(ySpeed != undefined) this._speedY = ySpeed;\n    },\n\n    // 设定位置\n    setPosition: function(x, y){\n        this._x = x;\n        this._y = y;\n        this.updatePosition();\n    },\n\n    // 设置限制移动范围\n    setMoveRect: function(x, y, w, h){\n        this._moveRect = cc.rect(x, y, w, h);\n    },\n\n    // 更新位置\n    updatePosition: function(){\n        if(this.node){\n            this.node.x = this._x;\n            this.node.y = this._y;\n        }else{\n            cc.warn('FlyingObject.js: updatePosition but [this.node] is null.');\n        }\n    },\n\n    // 检查存活限制，返回是否存活\n    checkLiveLimit: function(){\n        return this._liveTimeLimit <= 0 || this._liveTime < this._liveTimeLimit;\n    }\n\n});\n"
  ]
}