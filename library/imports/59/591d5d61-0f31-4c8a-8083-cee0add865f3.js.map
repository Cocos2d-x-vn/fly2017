{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "typeTag",
    "_liveTime",
    "_liveTimeLimit",
    "_speedX",
    "_speedY",
    "_x",
    "_y",
    "onLoad",
    "updatePosition",
    "doOnLoad",
    "update",
    "dt",
    "isValid",
    "node",
    "enabled",
    "checkLiveLimit",
    "doDestory",
    "doUpdate",
    "destroy",
    "setLiveLimit",
    "time",
    "setSpeed",
    "xSpeed",
    "ySpeed",
    "undefined",
    "setPosition",
    "x",
    "y",
    "warn"
  ],
  "mappings": ";;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,iBAAS,cAFD;;AAIR;AACAC,mBAAW,CALH;AAMR;AACAC,wBAAgB,CAPR;AAQR;AACAC,iBAAS,CATD;AAURC,iBAAS,CAVD;AAWR;AACAC,YAAI,CAZI;AAaRC,YAAI;AAbI,KAHP;;AAmBL;AACAC,YAAQ,kBAAY;AAChB,aAAKC,cAAL;AACA;AACA,aAAKC,QAAL;AACH,KAxBI;;AA0BL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAK,CAAChB,GAAGiB,OAAH,CAAW,KAAKC,IAAhB,CAAN,EAA8B;AAC1B,iBAAKC,OAAL,GAAe,KAAf;AACA;AACH;;AAED;AACA,aAAKb,SAAL,IAAkBU,EAAlB;;AAEA,YAAG,CAAC,KAAKI,cAAL,EAAJ,EAA0B;AACtB,iBAAKC,SAAL;AACA;AACH;;AAED;AACA,aAAKX,EAAL,IAAW,KAAKF,OAAhB;AACA,aAAKG,EAAL,IAAW,KAAKF,OAAhB;;AAEA,aAAKI,cAAL;;AAEA;AACA,aAAKS,QAAL,CAAcN,EAAd;AACH,KAjDI;;AAmDLF,cAAU,oBAAU;AAChB;AACH,KArDI;;AAuDL;AACAQ,cAAU,kBAASN,EAAT,EAAY;AAClB;AACA;AACH,KA3DI;;AA6DL;AACAK,eAAW,qBAAU;AACjB,YAAKrB,GAAGiB,OAAH,CAAW,KAAKC,IAAhB,CAAL,EAA6B;AACzB,iBAAKA,IAAL,CAAUK,OAAV;AACH;AACJ,KAlEI;;AAoEL;AACAC,kBAAc,sBAASC,IAAT,EAAc;AACxB,aAAKlB,cAAL,GAAsBkB,IAAtB;AACH,KAvEI;;AAyEL;AACAC,cAAU,kBAASC,MAAT,EAAiBC,MAAjB,EAAwB;AAC9B,YAAGD,UAAUE,SAAb,EAAwB,KAAKrB,OAAL,GAAemB,MAAf;AACxB,YAAGC,UAAUC,SAAb,EAAwB,KAAKpB,OAAL,GAAemB,MAAf;AAC3B,KA7EI;;AA+EL;AACAE,iBAAa,qBAASC,CAAT,EAAYC,CAAZ,EAAc;AACvB,aAAKtB,EAAL,GAAUqB,CAAV;AACA,aAAKpB,EAAL,GAAUqB,CAAV;AACA,aAAKnB,cAAL;AACH,KApFI;;AAsFL;AACAA,oBAAgB,0BAAU;AACtB,YAAG,KAAKK,IAAR,EAAa;AACT,iBAAKA,IAAL,CAAUa,CAAV,GAAc,KAAKrB,EAAnB;AACA,iBAAKQ,IAAL,CAAUc,CAAV,GAAc,KAAKrB,EAAnB;AACH,SAHD,MAGK;AACDX,eAAGiC,IAAH,CAAQ,0DAAR;AACH;AACJ,KA9FI;;AAgGL;AACAb,oBAAgB,0BAAU;AACtB,eAAO,KAAKb,cAAL,IAAuB,CAAvB,IAA4B,KAAKD,SAAL,GAAiB,KAAKC,cAAzD;AACH;;AAnGI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 标签，用于类型判断\n        typeTag: 'FlyingObject',\n\n        // 当前存活时间(秒)\n        _liveTime: 0,\n        // 存活时间限制（秒），到达该值时自动销毁，为0表示永久存在\n        _liveTimeLimit: 0,\n        // 速度\n        _speedX: 0,\n        _speedY: 0,\n        // 位置\n        _x: 0,\n        _y: 0\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.updatePosition();\n        // logic onLoad\n        this.doOnLoad();\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if ( !cc.isValid(this.node) ) {\n            this.enabled = false;\n            return;\n        }\n\n        // 存活检测\n        this._liveTime += dt;\n        \n        if(!this.checkLiveLimit()){\n            this.doDestory();    \n            return;\n        }\n\n        // move\n        this._x += this._speedX;\n        this._y += this._speedY;\n\n        this.updatePosition();\n\n        // logic update\n        this.doUpdate(dt);\n    },\n\n    doOnLoad: function(){\n        // 一般由子类实现具体逻辑\n    },\n\n    // 执行每帧update操作，一般子类覆盖此方法\n    doUpdate: function(dt){\n        // 一般由子类实现具体逻辑\n        // cc.log('FlyaingObject.doUpdate(%s)', dt);\n    },\n\n    // 销毁\n    doDestory: function(){\n        if ( cc.isValid(this.node) ) {\n            this.node.destroy();\n        }\n    },\n\n    // 设置存活限制时间（秒），0为无限\n    setLiveLimit: function(time){\n        this._liveTimeLimit = time;\n    },\n\n    // 设置速度\n    setSpeed: function(xSpeed, ySpeed){\n        if(xSpeed != undefined) this._speedX = xSpeed;\n        if(ySpeed != undefined) this._speedY = ySpeed;\n    },\n\n    // 设定位置\n    setPosition: function(x, y){\n        this._x = x;\n        this._y = y;\n        this.updatePosition();\n    },\n\n    // 更新位置\n    updatePosition: function(){\n        if(this.node){\n            this.node.x = this._x;\n            this.node.y = this._y;\n        }else{\n            cc.warn('FlyingObject.js: updatePosition but [this.node] is null.');\n        }\n    },\n\n    // 检查存活限制，返回是否存活\n    checkLiveLimit: function(){\n        return this._liveTimeLimit <= 0 || this._liveTime < this._liveTimeLimit;\n    }\n\n});\n"
  ]
}